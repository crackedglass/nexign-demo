/*
 * This file is generated by jOOQ.
 */
package ru.crackedglass.nexign_demo.entities.jooq.tables.records;


import java.time.Instant;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.crackedglass.nexign_demo.entities.jooq.tables.Cdr;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CdrRecord extends UpdatableRecordImpl<CdrRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CDR.CDR_ID</code>.
     */
    public void setCdrId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>CDR.CDR_ID</code>.
     */
    public UUID getCdrId() {
        return (UUID) get(0);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setCallType(Object value) {
        set(1, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getCallType() {
        return get(1);
    }

    /**
     * Setter for <code>CDR.CALLER_NUMBER</code>.
     */
    public void setCallerNumber(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>CDR.CALLER_NUMBER</code>.
     */
    public String getCallerNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>CDR.RECEIVER_NUMBER</code>.
     */
    public void setReceiverNumber(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>CDR.RECEIVER_NUMBER</code>.
     */
    public String getReceiverNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>CDR.START_TIMESTAMP</code>.
     */
    public void setStartTimestamp(Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>CDR.START_TIMESTAMP</code>.
     */
    public Instant getStartTimestamp() {
        return (Instant) get(4);
    }

    /**
     * Setter for <code>CDR.END_TIMESTAMP</code>.
     */
    public void setEndTimestamp(Instant value) {
        set(5, value);
    }

    /**
     * Getter for <code>CDR.END_TIMESTAMP</code>.
     */
    public Instant getEndTimestamp() {
        return (Instant) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CdrRecord
     */
    public CdrRecord() {
        super(Cdr.CDR);
    }

    /**
     * Create a detached, initialised CdrRecord
     */
    public CdrRecord(UUID cdrId, Object callType, String callerNumber, String receiverNumber, Instant startTimestamp, Instant endTimestamp) {
        super(Cdr.CDR);

        setCdrId(cdrId);
        setCallType(callType);
        setCallerNumber(callerNumber);
        setReceiverNumber(receiverNumber);
        setStartTimestamp(startTimestamp);
        setEndTimestamp(endTimestamp);
        resetChangedOnNotNull();
    }
}
